Использование
=============

Использовать ее очень просто, так как она все делает за вас!
Есть всего 3 функции, о которых вам надо знать::

    UniTurnip().read_json(JSON_SCHEMA)
    UniTurnip().start_survey()
    UniTurnip().answer(USER_ANSWER)

А также 3 переменных, в которых будет хранится все необходимое, для работы с библиотекой::

    UniTurnip().processing
    UniTurnip().current_question
    UniTurnip().user_answers


read_json(schema)
^^^^^^^^^^^^^^^^^

Принимет на вход json схему, на основе которой будет строится опрос
Принимает типы данных str и dict


start_survey()
^^^^^^^^^^^^^^

Запускает опрос
Данная функция нечего не принимает и не возвращает. Но при ее вызове происходит инициализация переменных "processing" и "current_question" о которых мы поговорим позже.


answer(user_answer)
^^^^^^^^^^^^^^^^^^^

Функция для сохранение ответов от пользователя в переменную "UniTurnip().user_answers", в нее можно передавать как "message.text", так и "call.data"
Она проверяет и сохраняет ответ пользователя и переходить к следующему вопросу, если ответ прошел проверку. Если ответ не прошел проверку, например если в схеме указана минимальная длинна для данного ответа, и от пользователя поступил более короткий ответ, то данная фунция не будет сохранять ответ, как и переходить к следующему вопросу, дабы задать этот вопрос пользователю повторно


Переменные
^^^^^^^^^^

Отображение состояния вопроса::
    UniTurnip().processing
Будет хранить значение типа "bool". Значение True, пока идет опрос, как только будет получен последний ответ, значение изменится на False

Переменная с текущим вопросом для пользователя::
    UniTurnip().current_question
    UniTurnip().current_question['question']  # Вопрос пользователю
    UniTurnip().current_question['keyboard']  # Клавиатура в вопросу, если есть, в ином случае просто None
    UniTurnip().current_question['type']  # Тип данных вопроса
Там будут хранится все данные о текущем вопросе, в виде словаря. В этой переменной хранится все о текущем вопросе, если в вопросе будут ограничения к ответу, по типу "minItems", "minlen" и тд., то данные ключи тоже появятся в данном словаре

Ответы пользователя::
    UniTurnip().user_answers
Содержит словарь со всеми ответами пользователя, в виде объекта
